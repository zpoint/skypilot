=== Job 1 (code-testing) on dev-cluster-alice ===
Job started at: 2024-01-13 08:00:00 UTC
Resources: 4CPU--16GB

Setting up testing environment...
Installing dependencies...
pip install pytest pytest-cov black flake8 mypy bandit safety
Successfully installed pytest-7.4.3 pytest-cov-4.1.0 black-23.9.1 flake8-6.1.0 mypy-1.7.1 bandit-1.7.5 safety-2.3.5

Cloning repository...
git clone https://github.com/skypilot-org/skypilot.git
Cloning into 'skypilot'...
remote: Enumerating objects: 25847, done.
remote: Counting objects: 100% (25847/25847), done.
remote: Compressing objects: 100% (8934/8934), done.
remote: Total 25847 (delta 16234), used 16234 (delta 16234), pack-reused 0
Receiving objects: 100% (25847/25847), 12.34 MiB | 15.2 MiB/s, done.
Resolving deltas: 100% (16234/16234), done.

Setting up development environment...
cd skypilot
pip install -e .
Successfully installed skypilot-dev

=== Code Quality Checks ===

1. Running Black (code formatter)...
black --check --diff .
would reformat sky/clouds/gcp.py
would reformat sky/backends/backend_utils.py
would reformat tests/test_optimizer.py
3 files would be reformatted, 247 files already formatted.

2. Running Flake8 (linting)...
flake8 sky/ tests/ --max-line-length=88 --extend-ignore=E203,W503
sky/backends/cloud_vm_ray_backend.py:234: E501 line too long (92 > 88 characters)
sky/optimizer.py:567: F401 'typing.Optional' imported but unused
tests/test_smoke.py:123: E302 expected 2 blank lines, found 1
3 violations found.

3. Running MyPy (static type checking)...
mypy sky/ --ignore-missing-imports
sky/clouds/service_catalog.py:145: error: Argument 1 to "get" has incompatible type "Optional[str]"; expected "str"
sky/utils/subprocess_utils.py:89: error: Incompatible return value type (got "Optional[str]", expected "str")
Found 2 type errors.

4. Running Bandit (security analysis)...
bandit -r sky/ -f json
Issues found: 1
- [B108:hardcoded_tmp_directory] Possible hardcoded temporary file/directory
  Location: sky/utils/log_utils.py:45
  Confidence: MEDIUM
  Severity: MEDIUM

5. Running Safety (dependency vulnerability check)...
safety check --json
No known security vulnerabilities found.

=== Unit Tests ===

Running pytest with coverage...
pytest tests/ -v --cov=sky --cov-report=html --cov-report=term

test_clouds.py::test_aws_regions ✓
test_clouds.py::test_gcp_regions ✓
test_clouds.py::test_azure_regions ✓
test_clouds.py::test_kubernetes_context ✓
test_backend_utils.py::test_get_cluster_name ✓
test_backend_utils.py::test_validate_cluster_name ✓
test_backend_utils.py::test_generate_cluster_name ✓
test_task.py::test_task_from_yaml ✓
test_task.py::test_task_resources ✓
test_task.py::test_task_environment ✓
test_optimizer.py::test_optimize_simple ✓
test_optimizer.py::test_optimize_with_constraints ✓
test_optimizer.py::test_optimize_multi_cloud ✓
test_resources.py::test_accelerator_parsing ✓
test_resources.py::test_memory_parsing ✓
test_resources.py::test_disk_parsing ✓
test_storage.py::test_s3_mount ✓
test_storage.py::test_gcs_mount ✓
test_storage.py::test_azure_mount ✓
test_global_user_state.py::test_cluster_operations ✓
test_global_user_state.py::test_cluster_status ✓
test_launch.py::test_launch_simple ✓
test_launch.py::test_launch_with_storage ✓
test_exec.py::test_exec_basic ✓
test_exec.py::test_exec_env_vars ✓
test_down.py::test_down_cluster ✓
test_status.py::test_status_all ✓
test_status.py::test_status_single ✓
test_yaml_utils.py::test_load_yaml ✓
test_yaml_utils.py::test_validate_yaml ✓
test_common_utils.py::test_run_command ✓
test_common_utils.py::test_fill_template ✓
test_log_utils.py::test_create_logger ✓
test_subprocess_utils.py::test_run_command ✓
test_subprocess_utils.py::test_run_command_with_env ✓
test_ux_utils.py::test_console_newlines ✓
test_ux_utils.py::test_print_exception ✓

test_jobs/test_job_queue.py::test_job_submit ✓
test_jobs/test_job_queue.py::test_job_cancel ✓
test_jobs/test_job_queue.py::test_job_logs ✓
test_jobs/test_managed_jobs.py::test_jobs_launch ✓
test_jobs/test_managed_jobs.py::test_jobs_status ✓

test_kubernetes/test_gpu_labeler.py::test_label_nodes ✓
test_kubernetes/test_networking.py::test_service_discovery ✓
test_kubernetes/test_storage.py::test_pvc_creation ✓

test_cli/test_cli_basic.py::test_cli_help ✓
test_cli/test_cli_basic.py::test_cli_version ✓
test_cli/test_cli_launch.py::test_launch_cli ✓
test_cli/test_cli_exec.py::test_exec_cli ✓

================= Test Results =================
47 passed, 0 failed, 0 error
Test coverage: 87.3%

=== Integration Tests ===

Running integration test suite...

test_integration/test_aws_integration.py::test_aws_launch ✓
test_integration/test_gcp_integration.py::test_gcp_launch ✓
test_integration/test_k8s_integration.py::test_k8s_basic ✓
test_integration/test_storage_integration.py::test_s3_mount ✓
test_integration/test_multi_node.py::test_ray_cluster ✓

================= Integration Results =================
5 passed, 0 failed, 0 error

=== Performance Tests ===

Running performance benchmarks...

1. Launch time benchmark:
   - AWS t3.micro: 2.3 minutes
   - GCP e2-micro: 2.1 minutes  
   - Azure B1s: 2.5 minutes
   - K8s pod: 45 seconds

2. Task execution benchmark:
   - Simple Python script: 12 seconds
   - Multi-node PyTorch: 8.7 minutes
   - Data processing: 3.2 minutes

3. Resource optimization benchmark:
   - Single constraint: 0.8 seconds
   - Multi-cloud optimization: 2.1 seconds
   - Complex workload: 4.3 seconds

=== Security Tests ===

1. Credential handling test: ✓ PASS
   - AWS credentials not leaked in logs
   - GCP service account keys properly secured
   - SSH keys have correct permissions (600)

2. Network security test: ✓ PASS
   - All connections use TLS/SSH
   - No plaintext credential transmission
   - Firewall rules properly configured

3. Code injection prevention: ✓ PASS
   - YAML parsing safe from injection
   - Command execution properly escaped
   - Environment variables sanitized

=== Documentation Tests ===

1. Code documentation coverage: 89.2%
2. Example scripts validation: ✓ ALL PASS
3. API documentation sync: ✓ UP TO DATE

=== Test Summary ===

Total tests run: 52
- Unit tests: 47/47 ✓
- Integration tests: 5/5 ✓
- Performance tests: 3/3 ✓
- Security tests: 3/3 ✓

Code quality issues:
- Black formatting: 3 files need formatting
- Flake8 linting: 3 minor violations
- MyPy typing: 2 type errors
- Bandit security: 1 low-risk finding

Test coverage: 87.3% (target: 85%)
Performance: All benchmarks within acceptable ranges
Security: No critical vulnerabilities found

=== Recommendations ===

1. Fix code formatting issues with: black sky/ tests/
2. Address the 3 linting violations
3. Fix type annotations for mypy compliance
4. Consider replacing hardcoded temp directory with tempfile module
5. Increase test coverage for edge cases in optimizer module

=== Output Files ===

Test reports saved to:
- test_results.xml (JUnit format)
- coverage.html (HTML coverage report)
- coverage.json (JSON coverage data)
- performance_benchmark.json
- security_scan_results.json

Code quality reports:
- black_report.txt
- flake8_report.txt  
- mypy_report.txt
- bandit_report.json

All reports saved to: /outputs/test_results/

Testing completed successfully!
Overall result: ✓ PASS (52/52 tests passed)
Code quality: GOOD (minor issues to address)
Security: EXCELLENT (no critical issues)

Total testing time: 2 hours 15 minutes
Job finished at: 2024-01-13 10:15:00 UTC

✓ Job completed successfully! 
